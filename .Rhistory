source('C:/Users/joshu/Dropbox/Documents/Research/Low-Rank-Approximation/simulations/dependence_sims/sims.R', echo=TRUE)
Rcpp::sourceCpp('generate_corr_sbm.cpp')
omega <- rowsum(A1 == A2)
omega <- rowsum(ifelse(A1 == A2,1,0))
rowsum(A1)
A1
omega <- rowSum(A1 == A2)
omega <- rowSums(A1 == A2)
rown
n
diag(Mhat_naive[c( (n+1):(2*n)), c((n+1):(2*n))]) <- omega
omega
omega/n
omega <- rowSums(A1 == 1 & A2==1)
omega
source('C:/Users/joshu/Dropbox/Documents/Research/Low-Rank-Approximation/simulations/dependence_sims/sims.R', echo=TRUE)
ns <- c(500,1000)# seq(500,5000,500)
p <- .05
a <- .03
b <- .07
corr = .4
sims <- 1
vech1 <- rep(0,length(ns))
vech2 <- rep(0,length(ns))
j <- 1
for (n in ns) {
print(paste0("simulations for n = ",n))
for (i in 1:sims) {
A1 <- simulate_Erdos_renyi(n,p)
A2 <- Matrix(simulate_corr_SBM(a,b,as.matrix(A1),corr,p))
Mhat_naive <- bdiag(A1,A2)
uhat_naive <- irlba(Mhat_naive,1,1)
uhat_naive <- uhat_naive$u
#Mhat_better <- Mhat_naive
omega <- rowSums(A1 == A2)
diag(Mhat_naive[c( (n+1):(2*n)), c((n+1):(2*n))]) <- omega/n
uhat_better <- irlba(Mhat_naive,1,1)
uhat_better <- uhat_better$u
vech1[j] <- vech1[j] + min(min(abs(sqrt(2*n)*uhat_better - 1),min(abs(sqrt(2*n)*uhat_better + 1))))
vech2[j] <- vech2[j] + min(min(abs(sqrt(2*n)*uhat_naive - 1),min(abs(sqrt(2*n)*uhat_naive + 1))))
}
vech1[j] <- vech1[j]/sims + .05
vech2[j] <- vech2[j]/sims
j <- j+1
}
dat <- data.frame(naive = vech2,off_diag =vech2,n = ns)
g <- ggplot(dat, aes(x = n))
g +   geom_line(aes(y = naive, linetype = 'Variable Name A'),lwd = 1) +
geom_line(aes(y = off_diag, linetype = 'Variable Name B'),lwd = 1)  +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10,hjust = 0.5))+
ggtitle( 'Estimated Eigenvectors Minus true eigenvectors error (up to sign)') +
ylab('Error')  + xlab('n') +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_text(size =10)) +
scale_linetype_manual(values = c('dashed','solid'),
labels= c('naive estimage','padded off-diagonal')
,name = "")
dat <- data.frame(naive = vech2,off_diag =vech1,n = ns)
g <- ggplot(dat, aes(x = n))
g +   geom_line(aes(y = naive, linetype = 'Variable Name A'),lwd = 1) +
geom_line(aes(y = off_diag, linetype = 'Variable Name B'),lwd = 1)  +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10,hjust = 0.5))+
ggtitle( 'Estimated Eigenvectors Minus true eigenvectors error (up to sign)') +
ylab('Error')  + xlab('n') +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_text(size =10)) +
scale_linetype_manual(values = c('dashed','solid'),
labels= c('naive estimage','padded off-diagonal')
,name = "")
devtools::install_github("gmailR","trinker")
install.packages("mail")
library(mail)
sendmail("jagterb1@jhu.edu", subject="Notification from R", message="Conditions finished running!", password="rmail")
install.packages("pushoverr"
)
pushoverr::pushover(message='Mr. Watson--come here--I want to see you.', user=u89ff6gbp38dg2key3p5q8x5qa5ndu, token=ajg6age36i9jnqxwbaw7izjy845hd3)
pushover(message='Mr. Watson--come here--I want to see you.', user='u89ff6gbp38dg2key3p5q8x5qa5ndu', token='ajg6age36i9jnqxwbaw7izjy845hd3')
library(pushoverr)
pushover(message='Mr. Watson--come here--I want to see you.', user='u89ff6gbp38dg2key3p5q8x5qa5ndu', token='ajg6age36i9jnqxwbaw7izjy845hd3')
?pushover
pushover(message='Mr. Watson--come here--I want to see you.', user='u89ff6gbp38dg2key3p5q8x5qa5ndu', app='ajg6age36i9jnqxwbaw7izjy845hd3')
title <- "omega = logn"
load(paste0(title,"_output.RData"))
g <- ggplot(dat, aes(x = n))
library(ggplot2)
g <- ggplot(dat, aes(x = n))
g +   geom_line(aes(y = naive, linetype = 'Variable Name A'),lwd = 1) +
geom_line(aes(y = off_diag, linetype = 'Variable Name B'),lwd = 1)  +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10,hjust = 0.5))+
ggtitle( 'Estimated Eigenvectors Minus true eigenvectors error (up to sign)') +
ylab('Error')  + xlab('n') +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_text(size =10)) +
scale_linetype_manual(values = c('dashed','solid'),
labels= c('naive estimage','padded off-diagonal')
,name = "")
View(dat)
jpeg(paste0(title,'.jpg'))
g <- ggplot(dat, aes(x = n))
g +   geom_line(aes(y = naive, linetype = 'Variable Name A'),lwd = 1) +
geom_line(aes(y = off_diag, linetype = 'Variable Name B'),lwd = 1)  +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(plot.title = element_text(size = 10,hjust = 0.5))+
ggtitle( 'Estimated Eigenvectors Minus true eigenvectors error (up to sign)') +
ylab('Error')  + xlab('n') +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_text(size =10)) +
scale_linetype_manual(values = c('dashed','solid'),
labels= c('naive estimage','padded off-diagonal')
,name = "")
dev.off()
message <- paste0(title,' simulations finished.')
pushover(message=message, user='u89ff6gbp38dg2key3p5q8x5qa5ndu', app='ajg6age36i9jnqxwbaw7izjy845hd3')
library(pushoverr)
pushover(message=message, user='u89ff6gbp38dg2key3p5q8x5qa5ndu', app='ajg6age36i9jnqxwbaw7izjy845hd3')
n <- 100
library(Matrix)
library(irlba)
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
library(Rcpp)
simulate_Erdos_renyi <- function(n,p) {
A <- Matrix(0,n,n)
A[upper.tri(A,diag = TRUE)] <- rbinom(choose(n,2) + n,1,p)
A <- forceSymmetric(A,"U")
return(A)
}
title <- "omega = A1 == A2"
Rcpp::sourceCpp("generate_corr_sbm.cpp")
print("Sourced C++ Code, beginning simulations...")
set.seed(1234)
p <- .05
a <- .03
b <- .07
corr = .4
vech1 <- rep(0,length(ns))
ns <- seq(500,8000,500)
vech1 <- rep(0,length(ns))
vech2 <- rep(0,length(ns))
j <- 1
print(paste0("simulations for n = ",n))
A1 <- simulate_Erdos_renyi(n,p)
A2 <- Matrix(simulate_corr_SBM(a,b,as.matrix(A1),corr,p))
Mhat_naive <- bdiag(A1,A2)
uhat_naive <- irlba(Mhat_naive,1,1)
uhat_naive <- uhat_naive$u
omega <- rowSums(A1 == A2)
omega <- rowSums(A1 == A2)/n
omega <- rowSums(A1 == 1 & A2==1)
diag(Mhat_naive[c( (n+1):(2*n)), c((n+1):(2*n))]) <- omega
uhat_better <- irlba(Mhat_naive,1,1)
uhat_better <- uhat_better$u
n <-100
ns <- seq(500,8000,500)
p <- .05
a <- .03
b <- .07
corr = .4
sims <- 10
vech1 <- rep(0,length(ns))
vech2 <- rep(0,length(ns))
j <- 1
A1 <- simulate_Erdos_renyi(n,p)
simulate_Erdos_renyi <- function(n,p) {
A <- Matrix(0,n,n)
A[upper.tri(A,diag = TRUE)] <- rbinom(choose(n,2) + n,1,p)
A <- forceSymmetric(A,"U")
return(A)
}
Rcpp::sourceCpp("generate_corr_sbm.cpp")
A1 <- simulate_Erdos_renyi(n,p)
library(Matrix)
library(irlba)
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
library(Rcpp)
A1 <- simulate_Erdos_renyi(n,p)
A2 <- Matrix(simulate_corr_SBM(a,b,as.matrix(A1),corr,p))
Mhat_naive <- bdiag(A1,A2)
uhat_naive <- irlba(Mhat_naive,1,1)
uhat_naive <- uhat_naive$u
omega <- rowSums(A1 ==  A2)/n
diag(Mhat_naive[c( (n+1):(2*n)), c((n+1):(2*n))]) <- omega
uhat_better <- irlba(Mhat_naive,1,1)
uhat_better <- uhat_better$u
log(1000)/1000
